msc {
  hscale = "2";

  "seaf-daemon","ccnet-daemon","server";

  "seaf-daemon"=>"seaf-daemon" [ label = "start seafile processes &\ncheck for inotify events" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_sync_state('synchronized' to 'committing')" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "apply_worktree_changes_to_index()" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_sync_state('committing' to 'uploading')" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(init --> check)\ntransition_state(check --> commit)" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "wt_monitor_job_linux()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_commit()"];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_OBJECT)" ];
  "server"->"ccnet-daemon" [ label = "200 OK" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(commit --> fs)" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "calculate_needed_object_list()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "calculate_needed_object_list_done()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_commit_start(peer_id, target_branch, token)" ];
  "ccnet-daemon"->"server" [ label = "ccnet_processor_send_request\n(remote 'peer_id' seafile-recvcommit-v3 'target_branch' 'token')" ];
  "server"->"ccnet-daemon" [ label = "send master branch" ];
  "ccnet-daemon"->"seaf-daemon" [ label = "send master branch" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "calculate_send_object_list()\ncalculate_send_object_list_done()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_object_list_segment()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_OBJ_LIST_SEG)" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "process_object_list_segment()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_object_list_segment()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_OBJ_LIST_SEG_END)" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_fs_object()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_OBJECT) or\nn*(ccnet_client_send_update(SC_OBJ_SEG)),\n ccnet_client_send_update(SC_OBJ_SEG_END)" ]; 
  "seaf-daemon"=>"seaf-daemon" [ label = "send_next_object()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_fs_object()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_OBJECT) or\nn*(ccnet_client_send_update(SC_OBJ_SEG)),\n ccnet_client_send_update(SC_OBJ_SEG_END)" ];
  --- [ label = "Repeat until all fs objects sent" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(fs --> check-blocks)" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_block_list_segment()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_BLOCK_LIST)" ];
  "server"->"ccnet-daemon" [ label = "SC_NEED_BLOCKS" ];
  "ccnet-daemon"->"seaf-daemon" [ label = "SC_NEED_BLOCKS" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "process_needed_blocks()" ];
  "seaf-daemon"->"ccnet-daemon" [ label = "send_block_list_segment()" ];
  "ccnet-daemon"->"server" [ label = "ccnet_client_send_update(SC_BLOCK_LIST_END)" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(check-blocks --> get-chunk-server)\nconnect_chunk_server() to open socket for connection with server\n" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(get-chunk-server --> data)" ];
  "seaf-daemon"->"server" [ label = "send_handshake(BLOCK_PROTOCOL_SIGNATURE)" ];
  "server"->"seaf-daemon" [ label = "STATUS_OK, BLOCK_PROTOCOL_VERSION=2" ];
  "seaf-daemon"->"server" [ label = "send_authentication(TOKEN)" ];
  |||;
  "seaf-daemon"=>"seaf-daemon" [ label = "RECV_STATE_AUTH" ];
  "seaf-daemon"->"server" [ label = "send_block_header(REQUEST_COMMAND_PUT)" ];
  "seaf-daemon"->"server" [ label = "send_block_content()" ];
  "server"->"seaf-daemon" [ label = "STATUS_OK" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "RECV_STATE_HEADER" ];
  --- [ label = "Repeat until all blocks sent" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_state(data --> update-branch)\ntransition_state(update-branch --> finished)" ];
  --- [ label = "Begin cleanup" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "transition_sync_state()" ];
  "seaf-daemon"=>"seaf-daemon" [ label = "sync_done_cb()" ];
}
